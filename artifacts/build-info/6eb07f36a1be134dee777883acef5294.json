{
	"id": "6eb07f36a1be134dee777883acef5294",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Proxy {\n    address public implementation;\n    address public owner;\n\n    constructor(address _implementation) {\n        implementation = _implementation;\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only the owner can perform this action\");\n        _;\n    }\n\n    fallback() external payable {\n        address _impl = implementation;\n\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize())\n\n            let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\n\n            let size := returndatasize()\n            returndatacopy(ptr, 0, size)\n\n            switch result\n            case 0 {\n                revert(ptr, size)\n            }\n            default {\n                return(ptr, size)\n            }\n        }\n    }\n\n    function upgrade(address _newImplementation) public onlyOwner {\n        implementation = _newImplementation;\n    }\n\n    function transferOwnership(address _newOwner) public onlyOwner {\n        owner = _newOwner;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newImplementation",
									"type": "address"
								}
							],
							"name": "upgrade",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"proxy.sol\":57:1129  contract Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"proxy.sol\":140:254  constructor(address _implementation) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"proxy.sol\":204:219  _implementation */\n  dup1\n    /* \"proxy.sol\":187:201  implementation */\n  0x00\n  dup1\n    /* \"proxy.sol\":187:219  implementation = _implementation */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"proxy.sol\":237:247  msg.sender */\n  caller\n    /* \"proxy.sol\":229:234  owner */\n  0x01\n  0x00\n    /* \"proxy.sol\":229:247  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"proxy.sol\":140:254  constructor(address _implementation) {... */\n  pop\n    /* \"proxy.sol\":57:1129  contract Proxy {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"proxy.sol\":57:1129  contract Proxy {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"proxy.sol\":57:1129  contract Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0900f010\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"proxy.sol\":423:436  address _impl */\n      0x00\n        /* \"proxy.sol\":439:453  implementation */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"proxy.sol\":423:453  address _impl = implementation */\n      swap1\n      pop\n        /* \"proxy.sol\":504:508  0x40 */\n      0x40\n        /* \"proxy.sol\":498:509  mload(0x40) */\n      mload\n        /* \"proxy.sol\":543:557  calldatasize() */\n      calldatasize\n        /* \"proxy.sol\":540:541  0 */\n      0x00\n        /* \"proxy.sol\":535:538  ptr */\n      dup3\n        /* \"proxy.sol\":522:558  calldatacopy(ptr, 0, calldatasize()) */\n      calldatacopy\n        /* \"proxy.sol\":637:638  0 */\n      0x00\n        /* \"proxy.sol\":634:635  0 */\n      dup1\n        /* \"proxy.sol\":618:632  calldatasize() */\n      calldatasize\n        /* \"proxy.sol\":613:616  ptr */\n      dup4\n        /* \"proxy.sol\":606:611  _impl */\n      dup6\n        /* \"proxy.sol\":599:604  gas() */\n      gas\n        /* \"proxy.sol\":586:639  delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"proxy.sol\":665:681  returndatasize() */\n      returndatasize\n        /* \"proxy.sol\":717:721  size */\n      dup1\n        /* \"proxy.sol\":714:715  0 */\n      0x00\n        /* \"proxy.sol\":709:712  ptr */\n      dup5\n        /* \"proxy.sol\":694:722  returndatacopy(ptr, 0, size) */\n      returndatacopy\n        /* \"proxy.sol\":743:749  result */\n      dup2\n        /* \"proxy.sol\":767:768  0 */\n      0x00\n        /* \"proxy.sol\":762:818  case 0 {... */\n      dup2\n      eq\n      tag_10\n      jumpi\n        /* \"proxy.sol\":869:873  size */\n      dup2\n        /* \"proxy.sol\":864:867  ptr */\n      dup5\n        /* \"proxy.sol\":857:874  return(ptr, size) */\n      return\n        /* \"proxy.sol\":762:818  case 0 {... */\n    tag_10:\n        /* \"proxy.sol\":799:803  size */\n      dup2\n        /* \"proxy.sol\":794:797  ptr */\n      dup5\n        /* \"proxy.sol\":787:804  revert(ptr, size) */\n      revert\n        /* \"proxy.sol\":910:1024  function upgrade(address _newImplementation) public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"proxy.sol\":78:107  address public implementation */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"proxy.sol\":113:133  address public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"proxy.sol\":1030:1127  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"proxy.sol\":910:1024  function upgrade(address _newImplementation) public onlyOwner {... */\n    tag_15:\n        /* \"proxy.sol\":313:318  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"proxy.sol\":299:318  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"proxy.sol\":299:309  msg.sender */\n      caller\n        /* \"proxy.sol\":299:318  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"proxy.sol\":291:361  require(msg.sender == owner, \"Only the owner can perform this action\") */\n      tag_30\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_30:\n        /* \"proxy.sol\":999:1017  _newImplementation */\n      dup1\n        /* \"proxy.sol\":982:996  implementation */\n      0x00\n      dup1\n        /* \"proxy.sol\":982:1017  implementation = _newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"proxy.sol\":910:1024  function upgrade(address _newImplementation) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"proxy.sol\":78:107  address public implementation */\n    tag_18:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"proxy.sol\":113:133  address public owner */\n    tag_23:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"proxy.sol\":1030:1127  function transferOwnership(address _newOwner) public onlyOwner {... */\n    tag_28:\n        /* \"proxy.sol\":313:318  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"proxy.sol\":299:318  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"proxy.sol\":299:309  msg.sender */\n      caller\n        /* \"proxy.sol\":299:318  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"proxy.sol\":291:361  require(msg.sender == owner, \"Only the owner can perform this action\") */\n      tag_35\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap1\n      tag_32\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_35:\n        /* \"proxy.sol\":1111:1120  _newOwner */\n      dup1\n        /* \"proxy.sol\":1103:1108  owner */\n      0x01\n      0x00\n        /* \"proxy.sol\":1103:1120  owner = _newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"proxy.sol\":1030:1127  function transferOwnership(address _newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_39:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_41:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_42:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_55\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_41\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_43:\n        /* \"#utility.yul\":641:665   */\n      tag_57\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_42\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_58\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_58:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_44:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_60\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_43\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_14:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_63\n      tag_39\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":917:1036   */\n    tag_62:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_64\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_44\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1294   */\n    tag_45:\n        /* \"#utility.yul\":1263:1287   */\n      tag_66\n        /* \"#utility.yul\":1281:1286   */\n      dup2\n        /* \"#utility.yul\":1263:1287   */\n      tag_42\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1258:1261   */\n      dup3\n        /* \"#utility.yul\":1251:1288   */\n      mstore\n        /* \"#utility.yul\":1176:1294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1300:1522   */\n    tag_20:\n        /* \"#utility.yul\":1393:1397   */\n      0x00\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1420:1429   */\n      dup3\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"#utility.yul\":1408:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1444:1515   */\n      tag_68\n        /* \"#utility.yul\":1512:1513   */\n      0x00\n        /* \"#utility.yul\":1501:1510   */\n      dup4\n        /* \"#utility.yul\":1497:1514   */\n      add\n        /* \"#utility.yul\":1488:1494   */\n      dup5\n        /* \"#utility.yul\":1444:1515   */\n      tag_45\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1300:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_46:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1928   */\n    tag_47:\n        /* \"#utility.yul\":1843:1877   */\n      0x4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1878   */\n      mstore\n        /* \"#utility.yul\":1912:1920   */\n      0x616374696f6e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1907:1909   */\n      0x20\n        /* \"#utility.yul\":1899:1905   */\n      dup3\n        /* \"#utility.yul\":1895:1910   */\n      add\n        /* \"#utility.yul\":1888:1921   */\n      mstore\n        /* \"#utility.yul\":1703:1928   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1934:2300   */\n    tag_48:\n        /* \"#utility.yul\":2076:2079   */\n      0x00\n        /* \"#utility.yul\":2097:2164   */\n      tag_72\n        /* \"#utility.yul\":2161:2163   */\n      0x26\n        /* \"#utility.yul\":2156:2159   */\n      dup4\n        /* \"#utility.yul\":2097:2164   */\n      tag_46\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2090:2164   */\n      swap2\n      pop\n        /* \"#utility.yul\":2173:2266   */\n      tag_73\n        /* \"#utility.yul\":2262:2265   */\n      dup3\n        /* \"#utility.yul\":2173:2266   */\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2291:2293   */\n      0x40\n        /* \"#utility.yul\":2286:2289   */\n      dup3\n        /* \"#utility.yul\":2282:2294   */\n      add\n        /* \"#utility.yul\":2275:2294   */\n      swap1\n      pop\n        /* \"#utility.yul\":1934:2300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2306:2725   */\n    tag_32:\n        /* \"#utility.yul\":2472:2476   */\n      0x00\n        /* \"#utility.yul\":2510:2512   */\n      0x20\n        /* \"#utility.yul\":2499:2508   */\n      dup3\n        /* \"#utility.yul\":2495:2513   */\n      add\n        /* \"#utility.yul\":2487:2513   */\n      swap1\n      pop\n        /* \"#utility.yul\":2559:2568   */\n      dup2\n        /* \"#utility.yul\":2553:2557   */\n      dup2\n        /* \"#utility.yul\":2549:2569   */\n      sub\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2523:2570   */\n      mstore\n        /* \"#utility.yul\":2587:2718   */\n      tag_75\n        /* \"#utility.yul\":2713:2717   */\n      dup2\n        /* \"#utility.yul\":2587:2718   */\n      tag_48\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2579:2718   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e5a98db6bdea81f83f9bae0f45d6e115d7670d27b500b282838da26cfd882a5864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106153803806106158339818101604052810190610032919061011c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610149565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100e9826100be565b9050919050565b6100f9816100de565b811461010457600080fd5b50565b600081519050610116816100f0565b92915050565b600060208284031215610132576101316100b9565b5b600061014084828501610107565b91505092915050565b6104bd806101586000396000f3fe6080604052600436106100435760003560e01c80630900f010146100915780635c60da1b146100ba5780638da5cb5b146100e5578063f2fde38b1461011057610044565b5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e816000811461008d578184f35b8184fd5b34801561009d57600080fd5b506100b860048036038101906100b3919061038d565b610139565b005b3480156100c657600080fd5b506100cf61020c565b6040516100dc91906103c9565b60405180910390f35b3480156100f157600080fd5b506100fa610230565b60405161010791906103c9565b60405180910390f35b34801561011c57600080fd5b506101376004803603810190610132919061038d565b610256565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c090610467565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610467565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035a8261032f565b9050919050565b61036a8161034f565b811461037557600080fd5b50565b60008135905061038781610361565b92915050565b6000602082840312156103a3576103a261032a565b5b60006103b184828501610378565b91505092915050565b6103c38161034f565b82525050565b60006020820190506103de60008301846103ba565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20706572666f726d20746869732060008201527f616374696f6e0000000000000000000000000000000000000000000000000000602082015250565b60006104516026836103e4565b915061045c826103f5565b604082019050919050565b6000602082019050818103600083015261048081610444565b905091905056fea2646970667358221220e5a98db6bdea81f83f9bae0f45d6e115d7670d27b500b282838da26cfd882a5864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x615 CODESIZE SUB DUP1 PUSH2 0x615 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x11C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xDE JUMP JUMPDEST DUP2 EQ PUSH2 0x104 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x116 DUP2 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132 JUMPI PUSH2 0x131 PUSH2 0xB9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP5 DUP3 DUP6 ADD PUSH2 0x107 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4BD DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900F010 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x110 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0x8D JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x139 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35A DUP3 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36A DUP2 PUSH2 0x34F JUMP JUMPDEST DUP2 EQ PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP5 DUP3 DUP6 ADD PUSH2 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x34F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451 PUSH1 0x26 DUP4 PUSH2 0x3E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x45C DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x480 DUP2 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xA9 DUP14 0xB6 0xBD 0xEA DUP2 0xF8 EXTCODEHASH SWAP12 0xAE 0xF GASLIMIT 0xD6 0xE1 ISZERO 0xD7 PUSH8 0xD27B500B282838D LOG2 PUSH13 0xFD882A5864736F6C6343000812 STOP CALLER ",
							"sourceMap": "57:1072:0:-:0;;;140:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;204:15;187:14;;:32;;;;;;;;;;;;;;;;;;237:10;229:5;;:18;;;;;;;;;;;;;;;;;;140:114;57:1072;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;57:1072:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_41": {
									"entryPoint": null,
									"id": 41,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@implementation_3": {
									"entryPoint": 524,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_5": {
									"entryPoint": 560,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_65": {
									"entryPoint": 598,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgrade_53": {
									"entryPoint": 313,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2728:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:1",
														"type": ""
													}
												],
												"src": "841:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1241:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1258:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1281:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1263:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1263:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1229:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1236:3:1",
														"type": ""
													}
												],
												"src": "1176:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1512:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1497:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1444:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1444:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1393:4:1",
														"type": ""
													}
												],
												"src": "1300:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1624:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1677:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1596:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1612:11:1",
														"type": ""
													}
												],
												"src": "1528:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1809:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:1"
																	},
																	{
																		"hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1843:34:1",
																		"type": "",
																		"value": "Only the owner can perform this "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1820:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1820:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1899:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1907:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1895:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1895:15:1"
																	},
																	{
																		"hexValue": "616374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1912:8:1",
																		"type": "",
																		"value": "action"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1888:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1888:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1888:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1801:6:1",
														"type": ""
													}
												],
												"src": "1703:225:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2080:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2090:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2156:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2161:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2097:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2090:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2262:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
																	"nodeType": "YulIdentifier",
																	"src": "2173:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2173:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2173:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2275:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2286:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2291:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2275:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2068:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"src": "1934:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2477:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2487:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2499:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2510:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2495:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2487:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2553:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2559:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2549:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2523:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2523:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2713:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2587:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2457:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2472:4:1",
														"type": ""
													}
												],
												"src": "2306:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the owner can perform this \")\n\n        mstore(add(memPtr, 32), \"action\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100435760003560e01c80630900f010146100915780635c60da1b146100ba5780638da5cb5b146100e5578063f2fde38b1461011057610044565b5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060405136600082376000803683855af43d806000843e816000811461008d578184f35b8184fd5b34801561009d57600080fd5b506100b860048036038101906100b3919061038d565b610139565b005b3480156100c657600080fd5b506100cf61020c565b6040516100dc91906103c9565b60405180910390f35b3480156100f157600080fd5b506100fa610230565b60405161010791906103c9565b60405180910390f35b34801561011c57600080fd5b506101376004803603810190610132919061038d565b610256565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c090610467565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd90610467565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061035a8261032f565b9050919050565b61036a8161034f565b811461037557600080fd5b50565b60008135905061038781610361565b92915050565b6000602082840312156103a3576103a261032a565b5b60006103b184828501610378565b91505092915050565b6103c38161034f565b82525050565b60006020820190506103de60008301846103ba565b92915050565b600082825260208201905092915050565b7f4f6e6c7920746865206f776e65722063616e20706572666f726d20746869732060008201527f616374696f6e0000000000000000000000000000000000000000000000000000602082015250565b60006104516026836103e4565b915061045c826103f5565b604082019050919050565b6000602082019050818103600083015261048081610444565b905091905056fea2646970667358221220e5a98db6bdea81f83f9bae0f45d6e115d7670d27b500b282838da26cfd882a5864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x43 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900F010 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x110 JUMPI PUSH2 0x44 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD CALLDATASIZE PUSH1 0x0 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE DUP4 DUP6 GAS DELEGATECALL RETURNDATASIZE DUP1 PUSH1 0x0 DUP5 RETURNDATACOPY DUP2 PUSH1 0x0 DUP2 EQ PUSH2 0x8D JUMPI DUP2 DUP5 RETURN JUMPDEST DUP2 DUP5 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x139 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCF PUSH2 0x20C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x230 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x3C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x38D JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C0 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DD SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35A DUP3 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36A DUP2 PUSH2 0x34F JUMP JUMPDEST DUP2 EQ PUSH2 0x375 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x361 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A3 JUMPI PUSH2 0x3A2 PUSH2 0x32A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP5 DUP3 DUP6 ADD PUSH2 0x378 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3C3 DUP2 PUSH2 0x34F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451 PUSH1 0x26 DUP4 PUSH2 0x3E4 JUMP JUMPDEST SWAP2 POP PUSH2 0x45C DUP3 PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x480 DUP2 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 0xA9 DUP14 0xB6 0xBD 0xEA DUP2 0xF8 EXTCODEHASH SWAP12 0xAE 0xF GASLIMIT 0xD6 0xE1 ISZERO 0xD7 PUSH8 0xD27B500B282838D LOG2 PUSH13 0xFD882A5864736F6C6343000812 STOP CALLER ",
							"sourceMap": "57:1072:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:13;439:14;;;;;;;;;;;423:30;;504:4;498:11;543:14;540:1;535:3;522:36;637:1;634;618:14;613:3;606:5;599;586:53;665:16;717:4;714:1;709:3;694:28;743:6;767:1;762:56;;;;869:4;864:3;857:17;762:56;799:4;794:3;787:17;910:114;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;78:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;113:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1030:97;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;910:114;313:5;;;;;;;;;;;299:19;;:10;:19;;;291:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;999:18:::1;982:14;::::0;:35:::1;;;;;;;;;;;;;;;;;;910:114:::0;:::o;78:29::-;;;;;;;;;;;;:::o;113:20::-;;;;;;;;;;;;;:::o;1030:97::-;313:5;;;;;;;;;;;299:19;;:10;:19;;;291:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1111:9:::1;1103:5;;:17;;;;;;;;;;;;;;;;;;1030:97:::0;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1393:4;1431:2;1420:9;1416:18;1408:26;;1444:71;1512:1;1501:9;1497:17;1488:6;1444:71;:::i;:::-;1300:222;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:225::-;1843:34;1839:1;1831:6;1827:14;1820:58;1912:8;1907:2;1899:6;1895:15;1888:33;1703:225;:::o;1934:366::-;2076:3;2097:67;2161:2;2156:3;2097:67;:::i;:::-;2090:74;;2173:93;2262:3;2173:93;:::i;:::-;2291:2;2286:3;2282:12;2275:19;;1934:366;;;:::o;2306:419::-;2472:4;2510:2;2499:9;2495:18;2487:26;;2559:9;2553:4;2549:20;2545:1;2534:9;2530:17;2523:47;2587:131;2713:4;2587:131;:::i;:::-;2579:139;;2306:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "242600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"implementation()": "2511",
								"owner()": "2536",
								"transferOwnership(address)": "26936",
								"upgrade(address)": "26870"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 140,
									"end": 254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 140,
									"end": 254,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 204,
									"end": 219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 187,
									"end": 219,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 219,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 187,
									"end": 219,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 237,
									"end": 247,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 229,
									"end": 234,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 229,
									"end": 234,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 229,
									"end": 247,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 229,
									"end": 247,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 229,
									"end": 247,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 229,
									"end": 247,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 229,
									"end": 247,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 140,
									"end": 254,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1129,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e5a98db6bdea81f83f9bae0f45d6e115d7670d27b500b282838da26cfd882a5864736f6c63430008120033",
									".code": [
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "900F010"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "5C60DA1B"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 423,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 453,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 439,
											"end": 453,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 543,
											"end": 557,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 522,
											"end": 558,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 618,
											"end": 632,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 613,
											"end": 616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 606,
											"end": 611,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 599,
											"end": 604,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 586,
											"end": 639,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 665,
											"end": 681,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 717,
											"end": 721,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 714,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 712,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 694,
											"end": 722,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 743,
											"end": 749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 767,
											"end": 768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 762,
											"end": 818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 762,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 762,
											"end": 818,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 869,
											"end": 873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 864,
											"end": 867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 857,
											"end": 874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 762,
											"end": 818,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 762,
											"end": 818,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 799,
											"end": 803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 794,
											"end": 797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 787,
											"end": 804,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 910,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 910,
											"end": 1024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 78,
											"end": 107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78,
											"end": 107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1030,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 299,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 299,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 291,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 999,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 982,
											"end": 1017,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 910,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78,
											"end": 107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78,
											"end": 107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 113,
											"end": 133,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 113,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 313,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 313,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 299,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 309,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 299,
											"end": 318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 299,
											"end": 318,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 291,
											"end": 361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 291,
											"end": 361,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 291,
											"end": 361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1111,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1103,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1103,
											"end": 1120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1281,
											"end": 1286,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1263,
											"end": 1287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1263,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1420,
											"end": 1429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1512,
											"end": 1513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1444,
											"end": 1515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1444,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1843,
											"end": 1877,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C7920746865206F776E65722063616E20706572666F726D207468697320"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1912,
											"end": 1920,
											"name": "PUSH",
											"source": 1,
											"value": "616374696F6E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1907,
											"end": 1909,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1905,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2076,
											"end": 2079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2156,
											"end": 2159,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2097,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2097,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2164,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2173,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2286,
											"end": 2289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2275,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2300,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1934,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2512,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2569,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2713,
											"end": 2717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2587,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2587,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2579,
											"end": 2718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"proxy.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"implementation()": "5c60da1b",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b",
							"upgrade(address)": "0900f010"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"proxy.sol\":{\"keccak256\":\"0x3ad8ce9245371d7d0eabdc46a20ae3cfc56d6016e49903e1dc2bb859d8393393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86fff59271e71308c6933eacf5f9f51db532bbc772d129a54409474605ce096\",\"dweb:/ipfs/QmZuyRpUA7wftrc6Zj9VfnLCSLBGuMn3M2oV4eMSMKsXmk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "proxy.sol:Proxy",
								"label": "implementation",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 5,
								"contract": "proxy.sol:Proxy",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> proxy.sol:4:1:\n  |\n4 | contract Proxy {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> proxy.sol:18:5:\n   |\n18 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 904,
						"file": "proxy.sol",
						"message": "The payable fallback function is defined here.",
						"start": 385
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 1129,
					"file": "proxy.sol",
					"start": 57
				},
				"type": "Warning"
			}
		],
		"sources": {
			"proxy.sol": {
				"ast": {
					"absolutePath": "proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							66
						]
					},
					"id": 67,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 66,
							"linearizedBaseContracts": [
								66
							],
							"name": "Proxy",
							"nameLocation": "66:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "5c60da1b",
									"id": 3,
									"mutability": "mutable",
									"name": "implementation",
									"nameLocation": "93:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "78:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "78:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 5,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "128:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 66,
									"src": "113:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "113:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "177:77:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "187:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 11,
														"name": "_implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "204:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "187:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "187:32:0"
											},
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 14,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "229:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 15,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "237:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "241:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "237:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "229:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "229:18:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_implementation",
												"nameLocation": "160:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "152:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:25:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "177:0:0"
									},
									"scope": 66,
									"src": "140:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "281:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 23,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "299:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "303:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "299:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 25,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "313:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "299:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920746865206f776e65722063616e20706572666f726d207468697320616374696f6e",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "320:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
																"typeString": "literal_string \"Only the owner can perform this action\""
															},
															"value": "Only the owner can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a1cb988fffa75dab1f18f6e33d352b421b15b8203fb8b7f8559967fd8de80e5",
																"typeString": "literal_string \"Only the owner can perform this action\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "291:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "291:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "291:70:0"
											},
											{
												"id": 30,
												"nodeType": "PlaceholderStatement",
												"src": "371:1:0"
											}
										]
									},
									"id": 32,
									"name": "onlyOwner",
									"nameLocation": "269:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "278:2:0"
									},
									"src": "260:119:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "413:491:0",
										"statements": [
											{
												"assignments": [
													36
												],
												"declarations": [
													{
														"constant": false,
														"id": 36,
														"mutability": "mutable",
														"name": "_impl",
														"nameLocation": "431:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "423:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 35,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "423:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"name": "implementation",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "439:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "423:30:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "473:425:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "487:22:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "504:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "498:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "498:11:0"
															},
															"variables": [
																{
																	"name": "ptr",
																	"nodeType": "YulTypedName",
																	"src": "491:3:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "535:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "540:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "543:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:14:0"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "522:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:36:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "522:36:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "572:67:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "599:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:5:0"
																	},
																	{
																		"name": "_impl",
																		"nodeType": "YulIdentifier",
																		"src": "606:5:0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "613:3:0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "618:12:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "618:14:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "634:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "586:12:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "586:53:0"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "576:6:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "653:28:0",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "665:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:16:0"
															},
															"variables": [
																{
																	"name": "size",
																	"nodeType": "YulTypedName",
																	"src": "657:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "709:3:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "714:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "717:4:0"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "694:14:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "694:28:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "694:28:0"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "769:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "794:3:0"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "799:4:0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "787:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "787:17:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "787:17:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "762:56:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "839:49:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "864:3:0"
																						},
																						{
																							"name": "size",
																							"nodeType": "YulIdentifier",
																							"src": "869:4:0"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "857:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "857:17:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "857:17:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "831:57:0",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "743:6:0"
															},
															"nodeType": "YulSwitch",
															"src": "736:152:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 36,
														"isOffset": false,
														"isSlot": false,
														"src": "606:5:0",
														"valueSize": 1
													}
												],
												"id": 39,
												"nodeType": "InlineAssembly",
												"src": "464:434:0"
											}
										]
									},
									"id": 41,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "413:0:0"
									},
									"scope": 66,
									"src": "385:519:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "972:52:0",
										"statements": [
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "implementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "982:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "999:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "982:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "982:35:0"
											}
										]
									},
									"functionSelector": "0900f010",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 46,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 45,
												"name": "onlyOwner",
												"nameLocations": [
													"962:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "962:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "962:9:0"
										}
									],
									"name": "upgrade",
									"nameLocation": "919:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_newImplementation",
												"nameLocation": "935:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "927:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:28:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "972:0:0"
									},
									"scope": 66,
									"src": "910:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1093:34:0",
										"statements": [
											{
												"expression": {
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 60,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1103:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 61,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1111:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1103:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1103:17:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1083:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 32,
												"src": "1083:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1083:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1039:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1065:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1057:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1056:19:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1093:0:0"
									},
									"scope": 66,
									"src": "1030:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 67,
							"src": "57:1072:0",
							"usedErrors": []
						}
					],
					"src": "32:1097:0"
				},
				"id": 0
			}
		}
	}
}